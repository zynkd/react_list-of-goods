{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSort","option","setState","handleReverse","handleReset","sortedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","classNames","onClick","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,WAAa,SAACC,GAAD,OAAsB,EAAKC,SAAS,CAAEL,SAAUI,KAN/D,EAQEE,cAAgB,WACd,EAAKD,UAAS,SAACN,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBAVzB,EAeEK,YAAc,WACZ,EAAKF,SAAS,CACZH,YAAY,EACZF,SAAUJ,EAASK,QAlBzB,4CAsBE,WAAU,IAAD,OAEDO,EAtDV,SACEC,EADF,GAGG,IADCT,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAsBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,KAAKJ,EAASkB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAKTf,GACFQ,EAAaQ,UAIRR,EA2BeS,CAAkBtB,EAAiBuB,KAAKrB,OAE5D,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAElB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYvB,IAAaJ,EAASkB,WAEpCU,QAAS,kBAAM,EAAKrB,WAAWP,EAASkB,WAL1C,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYvB,IAAaJ,EAASoB,SAEpCQ,QAAS,kBAAM,EAAKrB,WAAWP,EAASoB,SAL1C,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAfrB,IAEdsB,QAASJ,KAAKd,cALhB,qBAUEN,IAAaJ,EAASK,OAASC,GAC/B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKb,YAHhB,sBAUJ,6BACGC,EAAYiB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA1EpC,GAAyBC,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac1331d3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // Make copy to avoid mutation of the original array\n  const visibleGoods = [...goods];\n\n  // 1st comes the sorting\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  // Reverse() must come after sorting\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // After sorting and (potential) reverse, return altered copy of the original array\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSort = (option: SortType) => this.setState({ sortType: option });\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  // Revert back to the initial (default) state\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    // `sortedGoods` is used to generate the output (unordered list)\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': isReversed === false,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType === SortType.NONE && !isReversed) || (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map((item) => (\n            <li data-cy=\"Good\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}